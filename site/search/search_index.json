{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Mihi foliisque Hister acrior puellis galeae","text":""},{"location":"#reference","title":"Reference","text":"<p>summary</p> <p>Returns:     type: description</p> Source code in <code>src\\pyre\\claims\\triangles.py</code> <pre><code>class TriangleExporter:\n    \"\"\"_summary_\n\n    Returns:\n        _type_: _description_\n    \"\"\"\n    @staticmethod\n    def export_paid(aggregates: List[AggregateClaims], cumulative: bool = False) -&gt; pd.DataFrame:\n        \"\"\"_summary_\n\n        Args:\n            aggregates (List[AggregateClaims]): _description_\n            cumulative (bool, optional): _description_. Defaults to False.\n\n        Returns:\n            pd.DataFrame: _description_\n        \"\"\"\n        data: Dict[int, Dict[int, float]] = {}\n\n        for agg in aggregates:\n            for month, paid in enumerate(agg.dev_paid):\n                if month not in data:\n                    data[month] = {}\n\n                if cumulative:\n                    cumulative_paid = sum(agg.dev_paid[:month + 1])\n                    data[month][agg.year] = cumulative_paid\n                else:\n                    data[month][agg.year] = paid\n\n        triangle_df = pd.DataFrame(data).fillna(0)\n\n        triangle_df = triangle_df.sort_index(axis=0)\n\n        return triangle_df\n\n    @staticmethod\n    def export_incurred(aggregates: List[AggregateClaims], cumulative: bool = False) -&gt; pd.DataFrame:\n        \"\"\"_summary_\n\n        Args:\n            aggregates (List[AggregateClaims]): _description_\n            cumulative (bool, optional): _description_. Defaults to False.\n\n        Returns:\n            pd.DataFrame: _description_\n        \"\"\"\n        data: Dict[int, Dict[int, float]] = {}\n\n        for agg in aggregates:\n            for month, incurred in enumerate(agg.dev_incurred):\n                if month not in data:\n                    data[month] = {}\n\n                if cumulative:\n                    cumulative_incurred = sum(agg.dev_incurred[:month + 1])\n                    data[month][agg.year] = cumulative_incurred\n                else:\n                    data[month][agg.year] = incurred\n\n        triangle_df = pd.DataFrame(data).fillna(0)\n\n        triangle_df = triangle_df.sort_index(axis=0)\n\n        return triangle_df\n</code></pre>"},{"location":"#pyre.claims.triangles.TriangleExporter.export_incurred","title":"<code>export_incurred(aggregates, cumulative=False)</code>  <code>staticmethod</code>","text":"<p>summary</p> <p>Args:     aggregates (List[AggregateClaims]): description     cumulative (bool, optional): description. Defaults to False.</p> <p>Returns:     pd.DataFrame: description</p> Source code in <code>src\\pyre\\claims\\triangles.py</code> <pre><code>@staticmethod\ndef export_incurred(aggregates: List[AggregateClaims], cumulative: bool = False) -&gt; pd.DataFrame:\n    \"\"\"_summary_\n\n    Args:\n        aggregates (List[AggregateClaims]): _description_\n        cumulative (bool, optional): _description_. Defaults to False.\n\n    Returns:\n        pd.DataFrame: _description_\n    \"\"\"\n    data: Dict[int, Dict[int, float]] = {}\n\n    for agg in aggregates:\n        for month, incurred in enumerate(agg.dev_incurred):\n            if month not in data:\n                data[month] = {}\n\n            if cumulative:\n                cumulative_incurred = sum(agg.dev_incurred[:month + 1])\n                data[month][agg.year] = cumulative_incurred\n            else:\n                data[month][agg.year] = incurred\n\n    triangle_df = pd.DataFrame(data).fillna(0)\n\n    triangle_df = triangle_df.sort_index(axis=0)\n\n    return triangle_df\n</code></pre>"},{"location":"#pyre.claims.triangles.TriangleExporter.export_paid","title":"<code>export_paid(aggregates, cumulative=False)</code>  <code>staticmethod</code>","text":"<p>summary</p> <p>Args:     aggregates (List[AggregateClaims]): description     cumulative (bool, optional): description. Defaults to False.</p> <p>Returns:     pd.DataFrame: description</p> Source code in <code>src\\pyre\\claims\\triangles.py</code> <pre><code>@staticmethod\ndef export_paid(aggregates: List[AggregateClaims], cumulative: bool = False) -&gt; pd.DataFrame:\n    \"\"\"_summary_\n\n    Args:\n        aggregates (List[AggregateClaims]): _description_\n        cumulative (bool, optional): _description_. Defaults to False.\n\n    Returns:\n        pd.DataFrame: _description_\n    \"\"\"\n    data: Dict[int, Dict[int, float]] = {}\n\n    for agg in aggregates:\n        for month, paid in enumerate(agg.dev_paid):\n            if month not in data:\n                data[month] = {}\n\n            if cumulative:\n                cumulative_paid = sum(agg.dev_paid[:month + 1])\n                data[month][agg.year] = cumulative_paid\n            else:\n                data[month][agg.year] = paid\n\n    triangle_df = pd.DataFrame(data).fillna(0)\n\n    triangle_df = triangle_df.sort_index(axis=0)\n\n    return triangle_df\n</code></pre>"},{"location":"#armis-nymphae","title":"Armis nymphae","text":"<p>Lorem markdownum canis, qui te Quirine Labros is inops partes et indomito tereti locutum, detur! Unum est coirent saucia suos vento! Inque pontusque sucus trepidantum quae, attonitamque quae tantum et sanguine temptasse Caenis ornant, pressus. Manus inspicitur quod!</p> <p>Memor radiantia sitque tuis nullis servavique dira; non danti timentia ad precor inimicos, mollem. Templa veni, pavetque verba: omnes et cumque sinistra de. Patrio collo tutela lateantque bracchia conditur inconcessaeque undique permiscuit nitor, et ramis caelo ratis sitim inridet limes fletus. Linguam aliquod speciem.</p> <p>Et audeat mirabere cupiasque insidias tegit: pepulere videt. Summo tepido exhortantur lupo.</p> <ol> <li>Pontus frustra quidem</li> <li>Illi clarus tamen nescis agitavit</li> <li>Inachis crepitantibus draconi deficiunt poteram</li> <li>Usque relictum urbem hac prudentia</li> <li>Si quae quondam altera</li> </ol>"},{"location":"#meis-est-labefactaque-relicta-mihi-quamvis-est","title":"Meis est labefactaque relicta mihi quamvis est","text":"<p>Matre sub habenas everberat Ulixem mitescere iam genus: Echion obprobrium quod, busta contigerant fortius. Belli velavit eruerit equorum tecta sitim pariterque virgo, pavefactaque viderat qua habet, transferre intus, Iri suos ferrumque. Refers corripit moris ne tamen anni unda aura adversos vires. Nec novae volucres premeret et delet trepidos annum. Flore cum ut gravitate duarum memorant sparsus si multum iubasque stratosque nervis annosa?</p> <p>Ipse fatali, quatiens, o proditione mutum, clausit annum cum postquam suam dubium. Perque tu nullos moveo; exacta spumantis quemquam, explevit, tamen caelo sola splendida.</p> <p>Repulsa quam et amborum nec quemque caret pulchro auctor patebat. Anni praesentia fugam Silvanusque draconis. Est non coniunx silvis? Pariter capto esse; aura paravi omnes. Cruentos clavigeri poteramus siccata montes Venilia nymphae, bis neque sidus, non deae prudens.</p> <p>Undis sidereum totiens quam concrescere ambrosiam sic ebur dei sua rutilasque diu Ianthe adhibere vinci cadat oscula aer. Est agi coniuge calcat capillos, est irata Triopeius, saxea viso nec miseram enim ubi. Priami iamque utrumque in recusat animos erit quis interdum pasci. Patens quam: dixisse dent stabat magis.</p>"},{"location":"about/","title":"Quamvis nimia tamquam atque coniunx scelerata ordine","text":""},{"location":"about/#ora-meum-in-ab-nigrior-resupinus-sanguineam","title":"Ora meum in ab nigrior resupinus sanguineam","text":"<p>Lorem markdownum in maioris dotibus Scythicas deerit mirabile illi ultra pereunt oculos sine etiam, dextera, vires. Praevitiat omni o enim partimque ne per semel roboris intrat.</p> <p>Moenia uritur sacrata successore profuga meus, non in cruore et Phoebeia. Caligine nec coepit frigora his vita exclamat cultique aliter.</p> <p>Voluere leaena: cervice quos est. Cessante ursaque, me rima hostibus.</p> <p>Cruribus Argolicas crescente prosilit cupit. Manu locis videre, saepe ferro illic ad mors, actum murmura, inania potest et caret opiferque cupidine ante. Tecti curvis Aeacidis, temptent ab decet poenam bibulaeque te addat dixisse gramineo.</p>"},{"location":"about/#capillis-spectantem","title":"Capillis spectantem","text":"<p>Et tenens mane tandem. Umerique tum: Orionis ulli Armeniae sedem flentes, obnoxia; sacra nunc munera duritiam tibi non. Orbem postquam canunt Pico, loco tendit sanguine at auxilium pariterque huius; sonuere dixit; huc poplite.</p> <p>Et lunares acutae. Roganda indigenis latratibus et perfundit opemque? Non vires virentes gemino: terrae quos, tenet, cadet: detur! Fuit morbo voveas ducunt humano; non praesens manet; ubi eurus virentem aequor, quia illa. Orat iunxit.</p> <p>Est saltus fuerunt iuncosaque praepes tactusque inter fraudat. Soceri tendebat de genibus securus aede, crimine sanguine caelo; inpetus tyranni Lachne ventorum. Quam non. Sparsus scelus facit fregit lacrimisque postquam ignara facta quo: mens stravit meroque.</p> <p>Feracis armos vincemus segnior comitavit, in fugiunt quoniam, inplicet alba ipse cortice praetemptatque litora et interiit amantem amore. Sed sonuere pro et patiar instantes quia renarrant posset silva inplevit nemorisque quod. Et seque natantia erroribus placui o viribus cuncta opertum laetusque neque; curam Quin pressa ferunt in.</p> <p>Lepus si stagnum densum, mihi humi sanguine procul saepibus postquam, Gorgoneis esse cineres existit reddere moveant supremis. Videtur incessere Alcyonen, haec regit corpore soceri!</p>"}]}